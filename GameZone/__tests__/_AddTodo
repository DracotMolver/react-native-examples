import React from 'react';
import renderer from 'react-test-renderer';
import { render, fireEvent } from 'react-native-testing-library';
// Components
import AddTodo from '../components/AddTodo';

describe('Testing related to AddTodo components', () => {
  const tree = renderer.create(<AddTodo />).toJSON();

  test('Renders correctly AddTodo', () => {
    expect(tree).toMatchSnapshot();
  });

  test('Type a value and update its props value', () => {
    const { getByPlaceholder } = render(<AddTodo />);

    // Add text to the TextInput
    fireEvent.changeText(getByPlaceholder('New todo...'), 'adc');

    expect(getByPlaceholder('New todo...').props.value).toEqual('adc');
  });

  test('Type a value and  press the submit button', () => {
    // Mock the function handler
    const submitHandler = jest.fn();

    const { getByPlaceholder, getByText } = render(
      <AddTodo submitHandler={submitHandler} />,
    );

    // Add text to the TextInput
    fireEvent.changeText(getByPlaceholder('New todo...'), 'adc');
    // Call the mocked function
    fireEvent.press(getByText('Add Todo'));

    expect(getByPlaceholder('New todo...').props.value).toEqual('adc');
    expect(submitHandler.mock.calls.length).toBe(1);
    expect(submitHandler).toHaveBeenCalledWith('adc');
  });
});
